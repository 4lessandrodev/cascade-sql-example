{
        "git.ignoreLimitWarning": true,
        "editor.tabSize": 4,
        "typescript.preferences.importModuleSpecifier": "relative",
        "eslint.validate": [
                "javascriptreact",
                "typescript"
        ],
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
                "source.fixAll.eslint": true
        },
        "editor.autoIndent": "full",
        "explorer.compactFolders": false,
        "eslint.format.enable": true,
        "cSpell.words": [
                "casl",
                "chakra",
                "Chakra's",
                "codegen",
                "combobox",
                "conventioned",
                "dataloader",
                "entrypoint",
                "Enviar",
                "Erro",
                "Excluir",
                "globalstages",
                "groq",
                "kanban",
                "logomark",
                "Mais",
                "MUTAION",
                "nestjs",
                "newemail",
                "newownername",
                "oldownername",
                "ownername",
                "paren",
                "Paulo",
                "predeploy",
                "predev",
                "PSQL",
                "Resizer",
                "rio",
                "searchbar",
                "signup",
                "SVG's",
                "tablist",
                "taskpriorities",
                "TASKPRIORITY",
                "tasktags",
                "TASKTYPE",
                "tasktypes",
                "testid",
                "Typegoose",
                "typeorm",
                "Unmount",
                "upsert",
                "Usu",
                "Usu√°rio",
                "virtuals",
                "workmize",
                "workspacename"
        ],
        "javascript.preferences.importModuleSpecifier": "relative",
        "editor.insertSpaces": false,
        // Controls if quick suggestions should show up while typing
        "editor.quickSuggestions": {
                "other": true,
                "comments": true,
                "strings": true
        },
        // set eslint as default formatter
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
        "editor.acceptSuggestionOnCommitCharacter": true,
        // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
        "editor.acceptSuggestionOnEnter": "on",
        // Controls the delay in ms after which quick suggestions will show up.
        "editor.quickSuggestionsDelay": 100,
        // Controls if suggestions should automatically show up when typing trigger characters
        "editor.suggestOnTriggerCharacters": true,
        // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
        "editor.tabCompletion": "on",
        // Controls whether sorting favours words that appear close to the cursor
        "editor.suggest.localityBonus": true,
        // Controls how suggestions are pre-selected when showing the suggest list
        "editor.suggestSelection": "recentlyUsed",
        // Enable word based suggestions
        "editor.wordBasedSuggestions": true,
        // Enable parameter hints
        "editor.parameterHints.enabled": true
}